/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { Manager, ManagerInterface } from "../Manager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_investCallVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_createCampaignCallVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_withdrawCallVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyWithdrawn",
    type: "error",
  },
  {
    inputs: [],
    name: "CampaignNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "CampaignNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "EtherTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCampaignTimeline",
    type: "error",
  },
  {
    inputs: [],
    name: "InvestmentNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "postCall",
        type: "bool",
      },
    ],
    name: "LSP20CallingVerifierFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "postCall",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "returnedData",
        type: "bytes",
      },
    ],
    name: "LSP20InvalidMagicValue",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughSharesLeft",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleNotGoingOn",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "saleStartTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "saleEndTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingEndTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalRequirement",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxTokenSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "upAddress",
        type: "address",
      },
    ],
    name: "CamapaignCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "investmentTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Invested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawalTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOfLockedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOfUnlockedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "saleStartTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "saleEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRequirement",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raised",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawals",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "upAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_saleStartTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_saleEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_vestingEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalRequirement",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxTokenSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_upAddress",
        type: "address",
      },
    ],
    name: "createCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
    ],
    name: "getStatus",
    outputs: [
      {
        internalType: "enum Manager.CampaignStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
    ],
    name: "invest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "investments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCampaigns",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
    ],
    name: "totalSupplyOfLockedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
    ],
    name: "totalSupplyOfUnlockedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class Manager__factory {
  static readonly abi = _abi;
  static createInterface(): ManagerInterface {
    return new Interface(_abi) as ManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Manager {
    return new Contract(address, _abi, runner) as unknown as Manager;
  }
}
